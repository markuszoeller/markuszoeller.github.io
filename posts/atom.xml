<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Markus's Brain Swap Space</title>
  <id>http://markuszoeller.github.io/posts/atom.xml</id>
  <updated>2017-10-27T00:00:00Z</updated>
  <link href="http://markuszoeller.github.io/" />
  <link href="http://markuszoeller.github.io/posts/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.4">ABlog</generator>
  <entry xml:base="http://markuszoeller.github.io/posts/atom.xml">
    <title type="text">Monitoring with Prometheus</title>
    <id>http://markuszoeller.github.io/posts/2017/10/27/monitoring-prometheus/</id>
    <updated>2017-10-27T00:00:00Z</updated>
    <published>2017-10-27T00:00:00Z</published>
    <link href="http://markuszoeller.github.io/posts/2017/10/27/monitoring-prometheus/" />
    <author>
      <name>Markus Zoeller</name>
    </author>
    <content type="html">&lt;p&gt;One of the common causes for service degradation or interruption is still
the failure or exhaustion of your basic infrastructure resources.
This post gives you an intro how you can monitor your basic resources
with &lt;em&gt;Prometheus&lt;/em&gt;. It shows the setup with &lt;em&gt;Ansible&lt;/em&gt; and the data visualization
with &lt;em&gt;Grafana&lt;/em&gt;. The post does &lt;strong&gt;not&lt;/strong&gt; show all the capabilities of &lt;em&gt;Prometheus&lt;/em&gt;.
In fact, I&amp;#8217;m showing you only the simplest configuration. The benefit
of this post is, that it takes you from start to finish and gives you
a playground you can easily recreate when things go wrong, thanks to
&lt;em&gt;Vagrant&lt;/em&gt; and &lt;em&gt;VirtualBox&lt;/em&gt;. Beware, as this is a non-trivial (non-hello-world)
example, this post is really long.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://markuszoeller.github.io/posts/atom.xml">
    <title type="text">Recommendation: The Phoenix Project</title>
    <id>http://markuszoeller.github.io/posts/2017/10/13/book-phoenix-project/</id>
    <updated>2017-10-13T00:00:00Z</updated>
    <published>2017-10-13T00:00:00Z</published>
    <link href="http://markuszoeller.github.io/posts/2017/10/13/book-phoenix-project/" />
    <author>
      <name>Markus Zoeller</name>
    </author>
    <content type="html">&lt;p&gt;This is my take on the book
&lt;cite&gt;The Phoenix Project: A  Novel about IT, DevOps, and Helping Your Business Win&lt;/cite&gt;
from 2014 by &lt;em&gt;Gene Kim&lt;/em&gt;; &lt;em&gt;Kevin Behr&lt;/em&gt;; &lt;em&gt;George Spafford&lt;/em&gt;. It&amp;#8217;s more of a personal
reflection why I like the book &amp;#8211; and why I think you should read it too &amp;#8211;
and less of a review.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://markuszoeller.github.io/posts/atom.xml">
    <title type="text">Basics about Logrotate</title>
    <id>http://markuszoeller.github.io/posts/2017/09/29/logrotate/</id>
    <updated>2017-09-29T00:00:00Z</updated>
    <published>2017-09-29T00:00:00Z</published>
    <link href="http://markuszoeller.github.io/posts/2017/09/29/logrotate/" />
    <author>
      <name>Markus Zoeller</name>
    </author>
    <content type="html">&lt;p&gt;Ever lost a host because one of the services on that host used all
available disk space with its logs? &lt;em&gt;logrotate&lt;/em&gt; is a common tool
which truncates your logs to make sure this won&amp;#8217;t happen anymore.
This post is a short &lt;em&gt;how-to&lt;/em&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://markuszoeller.github.io/posts/atom.xml">
    <title type="text">OpenStack Nova Scheduling based on CPU architecture</title>
    <id>http://markuszoeller.github.io/posts/2017/08/25/openstack-cpu-arch-scheduling/</id>
    <updated>2017-08-25T00:00:00Z</updated>
    <published>2017-08-25T00:00:00Z</published>
    <link href="http://markuszoeller.github.io/posts/2017/08/25/openstack-cpu-arch-scheduling/" />
    <author>
      <name>Markus Zoeller</name>
    </author>
    <content type="html">&lt;p&gt;If you have an OpenStack cloud with compute nodes with different CPU
architectures, then this post will give you the needed information about
how to tag your guest images, which enables the Nova scheduler to find
a target with the correct CPU architecture.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://markuszoeller.github.io/posts/atom.xml">
    <title type="text">Setup Grafana + Graphite + Statsd</title>
    <id>http://markuszoeller.github.io/posts/2016/03/06/grafana-graphite-statsd/</id>
    <updated>2016-03-06T00:00:00Z</updated>
    <published>2016-03-06T00:00:00Z</published>
    <link href="http://markuszoeller.github.io/posts/2016/03/06/grafana-graphite-statsd/" />
    <author>
      <name>Markus Zoeller</name>
    </author>
    <content type="html">&lt;p&gt;If you ever played around with time series data and wanted to visualize them
with graphs in a nice way you probably have heard about &lt;em&gt;Grafana&lt;/em&gt;. This
post provides a step-by-step instruction on how to build a &lt;em&gt;Grafana&lt;/em&gt;-playground
in about 15 minutes. The setup will be build of &lt;em&gt;statsd&lt;/em&gt; to collect metrics,
&lt;em&gt;graphite&lt;/em&gt; to store those metrics, and &lt;em&gt;Grafana&lt;/em&gt; to visualize those metrics.
We will also create and push custom metrics and create templated graphs based
on them. This post won&amp;#8217;t provide any in-depth details about &lt;em&gt;statsd&lt;/em&gt;,
&lt;em&gt;graphite&lt;/em&gt; and &lt;em&gt;Grafana&lt;/em&gt; itself.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://markuszoeller.github.io/posts/atom.xml">
    <title type="text">OpenStack's Bug Management</title>
    <id>http://markuszoeller.github.io/posts/2015/12/01/openstack-bugs/</id>
    <updated>2015-12-01T00:00:00Z</updated>
    <published>2015-12-01T00:00:00Z</published>
    <link href="http://markuszoeller.github.io/posts/2015/12/01/openstack-bugs/" />
    <author>
      <name>Markus Zoeller</name>
    </author>
    <content type="html">&lt;p&gt;This post intends to give you enough background to play an active part in
working with bugs in &lt;em&gt;OpenStack&lt;/em&gt;. This includes an understanding of the
basic life cycle a bug goes through and in which state you can contribute
in which way. It also clarifies some possible misunderstandings and gives a
few best practices. In general, the bugs of a project (like &lt;em&gt;Nova&lt;/em&gt;, &lt;em&gt;Cinder&lt;/em&gt;,
&lt;em&gt;Neutron&lt;/em&gt; and others) can be found in our issue tracker &lt;em&gt;Launchpad&lt;/em&gt;. The
lists of bugs are available at &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;https://bugs.launchpad.net/&amp;lt;projectname&amp;gt;&lt;/span&gt;&lt;/code&gt; for
example &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;https://bugs.launchpad.net/nova&lt;/span&gt;&lt;/code&gt; for the &lt;em&gt;Nova&lt;/em&gt; project.&lt;/p&gt;
</content>
  </entry>
</feed>
